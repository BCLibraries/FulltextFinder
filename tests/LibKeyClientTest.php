<?php

use BCLib\FulltextFinder\LibKey\LibKeyClient;
use PHPUnit\Framework\TestCase;
use Symfony\Component\HttpClient\MockHttpClient;
use Symfony\Contracts\HttpClient\ResponseInterface;

class LibKeyClientTest extends TestCase
{
    /**
     * @var string
     */
    protected $api_key;

    /**
     * @var string
     */
    protected $library_id;

    /**
     * @var MockHttpClient
     */
    protected $http_client;

    /**
     * @var LibKeyClient
     */
    protected $libkey_client;

    public function setUp()
    {
        $this->http_client = $this->buildMockHTTPClient();
        $this->api_key = 'API-KEY-HERE';
        $this->library_id = '123';
        $this->libkey_client = new LibKeyClient($this->library_id, $this->api_key, $this->http_client);
    }

    public function testFetchSetsAuthorizationCorrectly()
    {
        $expected_options = ['auth_bearer' => $this->api_key];
        $this->libkey_client->request('/10.001/notarealdoi');
        $actual_options = $this->http_client->last_options;
        $this->assertEquals($expected_options, $actual_options);
    }

    public function testFetchSendsCorrectURL()
    {
        $expected_uri = "https://public-api.thirdiron.com/public/v1/libraries/{$this->library_id}/articles/doi/10.001/notarealdoi?include=journal";
        $this->libkey_client->request('10.001/notarealdoi');
        $actual_uri = $this->http_client->last_uri;
        $this->assertEquals($expected_uri, $actual_uri);
    }

    protected function buildMockHTTPClient() {

        // Add add some ability to introspect on HTTP requests.
        return new class() extends MockHttpClient
        {
            public $last_method;
            public $last_uri;
            public $last_options;

            public function request(
                string $method,
                string $url,
                array $options = []
            ): ResponseInterface {
                $this->last_method = $method;
                $this->last_uri = $url;
                $this->last_options = $options;
                return parent::request($method, $url, $options); // TODO: Change the autogenerated stub
            }
        };
    }
}
